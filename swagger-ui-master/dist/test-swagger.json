{
    "swagger": "2.0",
    "info": {
        "title": "Test API with example json",
        "description": "Test",
        "version": "1.0.0"
    },
    "host": "jsonplaceholder.typicode.com",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/posts": {
            "get": {
                "summary": "Posts",
                "description": "Get all posts.",
                "tags": [
                    "Posts"
                ],
                "responses": {
                    "200": {
                        "description": "An array of posts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Posts"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Add post",
                "description": "Add a post\n",
                "parameters": [
                    {
                        "in": "body",
                        "name": "post",
                        "description": "The properties of the post to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Posts"
                        }
                    }
                ],
                "tags": [
                    "Posts"
                ],
                "responses": {
                    "200": {
                        "description": "post added",
                        "schema": {
                            "$ref": "#/definitions/Posts"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "number"
                }
            ],
            "get": {
                "summary": "Post by id",
                "description": "Post by id\n",
                "tags": [
                    "Posts"
                ],
                "responses": {
                    "200": {
                        "description": "Post by id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Posts"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/posts/{id}/comments": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Post comments",
                "description": "Get comments for post.",
                "tags": [
                    "Posts"
                ],
                "responses": {
                    "200": {
                        "description": "Comments for a post",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Comments"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Posts": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string",
                    "description": "user id."
                },
                "id": {
                    "type": "string",
                    "description": "post id."
                },
                "title": {
                    "type": "string",
                    "description": "post title."
                },
                "body": {
                    "type": "string",
                    "description": "post description."
                }
            }
        },
        "Comments": {
            "type": "object",
            "properties": {
                "postId": {
                    "type": "string",
                    "description": "post id"
                },
                "id": {
                    "type": "string",
                    "description": "comment id"
                },
                "name": {
                    "type": "string",
                    "description": "user name who commented."
                },
                "email": {
                    "type": "string",
                    "description": "email id of user."
                },
                "body": {
                    "type": "number",
                    "description": "comment text."
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}